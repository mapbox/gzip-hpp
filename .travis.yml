language: generic

matrix:
  include:
    - os: linux
      sudo: false
      env: CXX=g++-5
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-5' ]
    - os: linux
      sudo: false
      env: CXX=clang++
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6', 'libstdc++-5-dev' ]
    - os: linux
      sudo: false
      env: CXX=clang++ CXXFLAGS="-fsanitize=address,undefined -fno-sanitize-recover=all"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6', 'libstdc++-5-dev' ]
    - os: osx
      osx_image: xcode8.3
    # clang-tidy specific job
    - os: linux
      sudo: false
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6', 'libstdc++-5-dev' ]
      script:
        - make tidy
    # Clang format build
    - os: linux
      sudo: false
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6', 'libstdc++-5-dev' ]
      script:
        - make format

env:
  global:
   - CMAKE_VERSION="3.8.2"

install:
  # set up the environment by installing mason and clang++
  - ./scripts/setup.sh --config local.env
  # put mason and clang++ on PATH
  - source local.env
  - mason install cmake ${CMAKE_VERSION}
  - mason link cmake ${CMAKE_VERSION}
  - which cmake

script:
  - make release
  - make test
  - make clean
  - make debug
  - make test
  - make clean
